// <auto-generated />
using System;
using BPD01_WebApi_Core.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bpd01webapicore.Migrations
{
    [DbContext(typeof(BpdDbContext))]
    partial class BpdDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.AttachmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("AddWhen");

                    b.Property<int>("FK_Id");

                    b.Property<string>("FK_Table")
                        .HasMaxLength(20);

                    b.Property<string>("FileName")
                        .HasMaxLength(255);

                    b.Property<string>("FileType")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("UploadDate");

                    b.Property<string>("Uri")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.CategoryModel", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("AddWhen");

                    b.Property<int>("Agency");

                    b.Property<decimal?>("Allocation");

                    b.Property<int>("CategoryClassification");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<int>("Division");

                    b.Property<decimal?>("Expenses");

                    b.Property<int>("FK_Grant_Id");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000);

                    b.Property<decimal?>("Remaining");

                    b.Property<string>("ReportingCategory")
                        .HasMaxLength(10);

                    b.HasKey("CatId");

                    b.HasIndex("FK_Grant_Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.CommentModel", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<string>("Comment")
                        .HasMaxLength(2000);

                    b.Property<DateTime>("CommentDate");

                    b.Property<int>("FK_Grant_Id");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.HasKey("CommentId");

                    b.HasIndex("FK_Grant_Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.DocumentModel", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("DocumentData");

                    b.Property<int>("FK_Attachment_Id");

                    b.HasKey("DocumentId");

                    b.HasIndex("FK_Attachment_Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.ExpenditureModel", b =>
                {
                    b.Property<int>("ExpenditureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("AddWhen");

                    b.Property<decimal?>("Amount");

                    b.Property<decimal>("BpdAmount");

                    b.Property<DateTime?>("BpdDate");

                    b.Property<string>("BpdNotes")
                        .HasMaxLength(2000);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<bool?>("DivStatus");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ExpenditureDate");

                    b.Property<int>("FK_Category_Id");

                    b.Property<bool>("IsCredit");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000);

                    b.Property<string>("SamDocNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Vendor")
                        .HasMaxLength(50);

                    b.HasKey("ExpenditureId");

                    b.HasIndex("FK_Category_Id");

                    b.ToTable("Expenditures");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.GANModel", b =>
                {
                    b.Property<int>("GANId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("AddWhen");

                    b.Property<int>("FK_Grant_Id");

                    b.Property<int>("GANStatus");

                    b.Property<string>("GAN_Notes")
                        .HasMaxLength(500);

                    b.Property<int>("GrantAdjustments");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.Property<DateTime?>("SubmissionDate");

                    b.Property<string>("SubmissionInitials")
                        .HasMaxLength(10);

                    b.HasKey("GANId");

                    b.HasIndex("FK_Grant_Id");

                    b.ToTable("GANs");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.GrantExtensionModel", b =>
                {
                    b.Property<int>("GrantExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("AddWhen");

                    b.Property<DateTime>("ExtensionDate");

                    b.Property<int>("FK_Grant_Id");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.HasKey("GrantExtensionId");

                    b.HasIndex("FK_Grant_Id");

                    b.ToTable("Extensions");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.GrantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accountant")
                        .HasMaxLength(127);

                    b.Property<string>("Adjustments")
                        .HasMaxLength(35);

                    b.Property<double?>("ApplicationAmount");

                    b.Property<DateTime?>("ApplicationDueDate");

                    b.Property<int>("ApplicationStatus");

                    b.Property<decimal>("AwardAmount");

                    b.Property<string>("AwardContractNumber")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("AwardDate");

                    b.Property<string>("CfdaNumber")
                        .HasMaxLength(32);

                    b.Property<string>("Component")
                        .HasMaxLength(10);

                    b.Property<string>("CreateBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Division")
                        .HasMaxLength(255);

                    b.Property<decimal>("Expenditures");

                    b.Property<DateTime?>("ExtendedProjectDate");

                    b.Property<DateTime?>("FinancialReportDueDate");

                    b.Property<int>("Forecast");

                    b.Property<int>("GrantCategory");

                    b.Property<string>("GrantName")
                        .HasMaxLength(255);

                    b.Property<int>("GrantType");

                    b.Property<int>("Grantor");

                    b.Property<DateTime?>("ImportDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsNew");

                    b.Property<string>("Match")
                        .HasMaxLength(32);

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModDate");

                    b.Property<string>("MshpGrantNumber")
                        .HasMaxLength(10);

                    b.Property<string>("NickName")
                        .HasMaxLength(32);

                    b.Property<DateTime?>("ProgrammingReportDueDate");

                    b.Property<string>("ProjectDirector")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ProjectEndDate");

                    b.Property<DateTime?>("ProjectStartDate");

                    b.Property<decimal>("RemainingBal");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Grants");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.LdprModel", b =>
                {
                    b.Property<int>("LdprId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("AddWhen");

                    b.Property<int>("FK_Grant_Id");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LdprNumber")
                        .HasMaxLength(10);

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.HasKey("LdprId");

                    b.HasIndex("FK_Grant_Id");

                    b.ToTable("Ldpr");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.PickListModel", b =>
                {
                    b.Property<int>("PickListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("AddWhen");

                    b.Property<int>("Index");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModWhen");

                    b.Property<string>("PickList")
                        .HasMaxLength(32);

                    b.Property<string>("Value")
                        .HasMaxLength(50);

                    b.HasKey("PickListId");

                    b.ToTable("PickLists");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.ReportDateModel", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime?>("DateSubmittedToGrantor");

                    b.Property<int>("FK_Grant_Id");

                    b.Property<string>("FinancialReportingPeriod");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("ProgrammingReportingPeriod");

                    b.Property<DateTime>("ReportDate");

                    b.Property<string>("ReportType")
                        .HasMaxLength(1);

                    b.HasKey("ReportId");

                    b.HasIndex("FK_Grant_Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.CategoryModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.GrantModel", "Grant")
                        .WithMany()
                        .HasForeignKey("FK_Grant_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.CommentModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.GrantModel", "Grant")
                        .WithMany("Comments")
                        .HasForeignKey("FK_Grant_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.DocumentModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.AttachmentModel", "Attachments")
                        .WithMany("Documents")
                        .HasForeignKey("FK_Attachment_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.ExpenditureModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.CategoryModel", "Category")
                        .WithMany("ExpenditureList")
                        .HasForeignKey("FK_Category_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.GANModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.GrantModel", "Grant")
                        .WithMany("GanList")
                        .HasForeignKey("FK_Grant_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.GrantExtensionModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.GrantModel", "Grant")
                        .WithMany("ExtensionDates")
                        .HasForeignKey("FK_Grant_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.LdprModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.GrantModel", "Grant")
                        .WithMany("LdprProjectNumbers")
                        .HasForeignKey("FK_Grant_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BPD01_WebApi_Core.Domain.ReportDateModel", b =>
                {
                    b.HasOne("BPD01_WebApi_Core.Domain.GrantModel", "Grant")
                        .WithMany("ReportDates")
                        .HasForeignKey("FK_Grant_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
